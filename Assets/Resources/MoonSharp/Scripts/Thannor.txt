return{
	title = "Thannor",
	type = 'c',
	aspects = {0, 0, 2, 0},
	desc = "Suas criaturas ganham +1/+2 se estiverem sobre um terreno de terra",
	flavor = "Sua cabeca pode ser melhor que qualquer mapa que os melhores cartografos de Sorawa poderiam traÃ§ar, e Thannor sabe muito bem como usa-la em batalhas.",
	cost = 4,
	atk = 2,
	hp = 4,


		OnEnter = function(args)
			local board = args[1]
			local self = args[2]
			local player = board.currPlayer
			local terrain
			if player == 1 then
				for i=0,4 do
					terrain =  board.GetMatrixValue(0,i)
					if terrain ~=nil then
						if terrain.Data.elements[3] > 0 then
							card = board.GetMatrixValue(1,i)
							if card ~= nil then
								card.addAnimation("buff");
								card.Data.atk = card.Data.atk + 1
								card.Data.hp = card.Data.hp +2  
							end
						end
					end
				end	
			end 
			if player == 2 then
				for i=0,4 do
					terrain =  board.GetMatrixValue(3,i)
					if terrain ~=nil then
						if terrain.Data.elements[3] > 0 then
							card = board.GetMatrixValue(2,i)
							if card ~= nil then
								card.addAnimation("buff");
								card.Data.atk = card.Data.atk + 1
								card.Data.hp = card.Data.hp +2  
							end 
						end
					end
				end	
			end
		end,

		OnNewCardInField = function(args)
			local board = args[1]
			local self = args[2]
			local card = args[3]
			local player = board.currPlayer
					
			if card.type == "c" and (card.pos[1] == self.pos[1]) then
				local posX = (card.pos[1] - 1) * 3
				local posY = card.pos[2]
				local terrain = board.GetMatrixValue(posX,posY)
				
				if terrain ~= nil then
			 
					if terrain.Data.elements[3] > 0 then
						print("Bom amigos")
						card.addAnimation("buff");
						card.Data.atk = card.Data.atk + 1;
						card.Data.hp = card.Data.hp + 2;
					end
				end
			end
		end,

		OnAnyCardMove = function(args)
			local board = args[1]
			local self = args[2]
			local card = args[3]
			local player = board.currPlayer

			if (card.pos[1] == self.pos[1])	then
				if card.type == "c" then
					local posX = (card.pos[1] - 1) * 3
					local posY = card.pos[2]
					local terrain = board.GetMatrixValue(posX,posY)
					local origin = board.GetMatrixValue(posX,args[5])
					print(card.infoName)

					if terrain ~= nil and terrain.Data.elements[3] > 0 then
						if origin == nil or origin.Data.elements[3] == 0 then
							card.addAnimation("buff");
							card.Data.atk = card.Data.atk + 1
							card.Data.hp = card.Data.hp +2  
						end
					else
						if origin ~= nil and origin.Data.elements[3] > 0 then
							print("Poha amigos")
							card.addAnimation("debuff");
							card.Data.atk = card.Data.atk - 1;
							card.Data.hp = card.Data.hp - 2;
						end
					end
				end
			end
		end,

		OnDeadCardInField = function(args)
			local board = args[1]
			local victim = args[3]

			if victim.type == 't' and victim.Data.elements[3] > 0 then
				local posX = 1 + victim.pos[1] / 3;
				local guest = board.GetMatrixValue(posX,victim.pos[2]);

				if guest ~= nil then
					guest.addAnimation("debuff");
					guest.Data.atk = guest.Data.atk - 1;
					guest.Data.hp = guest.Data.hp - 2;
				end
			end
		end,

		OnExit = function(args)
			local board = args[1]
			local self = args[2]
			local posX = (self.pos[1] - 1) * 3

			for i=0,4 do
				local card = board.GetMatrixValue(self.pos[1],i)
			
				if card ~= nil and i ~= self.pos[2] then
					local terrain = board.GetMatrixValue(posX,i)
					if terrain ~= nil and terrain.Data.elements[3] > 0 then
						print(terrain.infoName)
						card.addAnimation("debuff");
						card.Data.atk = card.Data.atk - 1;
						card.Data.hp = card.Data.hp - 2
					end
				end
				print(self.Data.atk)
			end
		end
}